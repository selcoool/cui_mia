#include <SPI.h>
#include <RF24.h>

// Ch√¢n k·∫øt n·ªëi
#define CE_PIN 14
#define CSN_PIN 5

RF24 radio(CE_PIN, CSN_PIN);  // CE, CSN
const byte address[6] = "00001";  // ƒê·ªãa ch·ªâ pipe

// Ch√¢n joystick
#define JOY2_X 35
#define JOY2_Y 34
#define JOY2_B 25

#define JOY1_X 33
#define JOY1_Y 32
#define JOY1_B 27

void setup() {
  Serial.begin(115200);
  delay(1000); // ƒê·ª£i Serial s·∫µn s√†ng

  if (!radio.begin()) {
    Serial.println("‚ùå NRF24 kh√¥ng ph√°t hi·ªán ƒë∆∞·ª£c!");
    while (1); // D·ª´ng n·∫øu kh√¥ng t√¨m th·∫•y module
  }

  Serial.println("‚úÖ NRF24 ƒë√£ kh·ªüi ƒë·ªông th√†nh c√¥ng!");
  radio.openWritingPipe(address);      // M·ªü pipe ƒë·ªÉ g·ª≠i
  radio.setPALevel(RF24_PA_LOW);       // M·ª©c c√¥ng su·∫•t
  radio.setDataRate(RF24_1MBPS);       // T·ªëc ƒë·ªô truy·ªÅn
  radio.stopListening();               // Ch·∫ø ƒë·ªô g·ª≠i

  // In th√¥ng tin chi ti·∫øt c·ªßa module
  radio.printDetails();
  Serial.println("üöÄ S·∫µn s√†ng g·ª≠i d·ªØ li·ªáu...");
}

void loop() {
  // C·∫≠p nh·∫≠t gi√° tr·ªã joystick m·ªói l·∫ßn l·∫∑p
  int joy1X = analogRead(JOY1_X);
  int joy1Y = analogRead(JOY1_Y);


  int joy2X = analogRead(JOY2_X);
  int joy2Y = analogRead(JOY2_Y);


  // T·∫°o chu·ªói ƒë·ªÉ g·ª≠i
  String message = "q:" + String(joy1X) +
                   " w:" + String(joy1Y) +
                   " e:" + String(joy2X) +
                   " f:" + String(joy2Y);

  char text[100];
  message.toCharArray(text, sizeof(text));

  bool success = radio.write(&text, sizeof(text));

  Serial.println(success ? "‚úÖ G·ª≠i th√†nh c√¥ng!" : "‚ùå G·ª≠i th·∫•t b·∫°i!");
  Serial.print("üì§ ƒê√£ g·ª≠i: ");
  Serial.println(text);

  delay(1000);
}
