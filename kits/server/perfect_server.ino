#include <WiFi.h>
#include <WebServer.h>
#include <WebSocketsServer.h>

const char* ssid = "ESP32_WIFI";   // T√™n WiFi
const char* password = "12345678"; // M·∫≠t kh·∫©u WiFi

WebServer server(80);
WebSocketsServer webSocket(81);

#define LED_PIN 2         // Ch√¢n GPIO ƒëi·ªÅu khi·ªÉn LED (n·∫øu c·∫ßn)
#define PWM_CHANNEL 0
#define PWM_FREQ 5000
#define PWM_RESOLUTION 8  // 8-bit (0-255)

bool ledState = false;   // LED m·∫∑c ƒë·ªãnh t·∫Øt
int brightness = 127;    // ƒê·ªô s√°ng LED m·∫∑c ƒë·ªãnh (n·∫øu LED b·∫≠t)
int speed = 100;         // T·ªëc ƒë·ªô di chuy·ªÉn m·∫∑c ƒë·ªãnh

// Giao di·ªán web ƒë∆∞·ª£c l∆∞u ·ªü flash (PROGMEM)
const char MAIN_page[] PROGMEM = R"rawliteral(
<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ESP32 ƒêi·ªÅu Khi·ªÉn</title>
  <script>
    var socket;
    function init() {
      socket = new WebSocket("ws://" + window.location.hostname + ":81/");
      socket.onmessage = function(event) {
        // C√≥ th·ªÉ c·∫≠p nh·∫≠t giao di·ªán n·∫øu c·∫ßn
      };
    }
    // H√†m g·ª≠i l·ªánh qua WebSocket
    function sendCommand(command) {
      socket.send(command);
    }
    // H√†m g·ª≠i gi√° tr·ªã t·ªëc ƒë·ªô t·ª´ slider (n·∫øu c·∫ßn)
    function sendSpeed(value) {
      socket.send("speed," + value);
    }
  </script>
  <style>
    body { font-family: Arial, sans-serif; text-align: center; }
    .btn { padding: 20px; font-size: 24px; margin: 5px; cursor: pointer; }
    .grid { 
      display: grid; 
      grid-template-columns: repeat(3, 1fr); 
      gap: 10px; 
      width: 300px; 
      margin: auto; 
    }
  </style>
</head>
<body onload="init()">
  <h1>ESP32 ƒêi·ªÅu Khi·ªÉn 4 H∆∞·ªõng</h1>
  <div class="grid">
    <div></div>
    <!-- N√∫t tr√™n -->
    <button class="btn" 
            ontouchstart="sendCommand('UP');" 
            onmousedown="sendCommand('UP');">‚¨ÜÔ∏è</button>
    <div></div>
    
    <!-- N√∫t tr√°i -->
    <button class="btn" 
            ontouchstart="sendCommand('LEFT');" 
            onmousedown="sendCommand('LEFT');">‚¨ÖÔ∏è</button>
    <!-- N√∫t ch√≠nh gi·ªØa: STOP -->
    <button class="btn" 
            ontouchstart="sendCommand('STOP');" 
            onmousedown="sendCommand('STOP');">‚èπ</button>
    <!-- N√∫t ph·∫£i -->
    <button class="btn" 
            ontouchstart="sendCommand('RIGHT');" 
            onmousedown="sendCommand('RIGHT');">‚û°Ô∏è</button>
    
    <div></div>
    <!-- N√∫t d∆∞·ªõi -->
    <button class="btn" 
            ontouchstart="sendCommand('DOWN');" 
            onmousedown="sendCommand('DOWN');">‚¨áÔ∏è</button>
    <div></div>
  </div>
  <br>
  <!-- C√°c n√∫t kh√°c: tƒÉng t·ªëc v√† b·∫≠t/t·∫Øt LED -->
  <button class="btn" onclick="sendCommand('BOOST')">üöÄ TƒÉng t·ªëc</button>
  <button class="btn" onclick="sendCommand('TOGGLE_LED')">üí° B·∫≠t/T·∫Øt ƒê√®n</button>
  <br><br>
  <p>T·ªëc ƒë·ªô: <span id="speedValue">100</span></p>
  <input id="slider" type="range" min="0" max="255" value="100" oninput="sendSpeed(this.value)">
</body>
</html>
)rawliteral";

void handleRoot() {
  server.send(200, "text/html", MAIN_page);
}

void webSocketEvent(uint8_t num, WStype_t type, uint8_t * payload, size_t length) {
  if (type == WStype_TEXT) {
    String message = (char*)payload;
    
    // X·ª≠ l√Ω l·ªánh thay ƒë·ªïi t·ªëc ƒë·ªô (n·∫øu s·ª≠ d·ª•ng slider)
    if (message.startsWith("speed,")) {
      speed = message.substring(6).toInt();
      Serial.print("T·ªëc ƒë·ªô m·ªõi: ");
      Serial.println(speed);
    }
    // X·ª≠ l√Ω l·ªánh di chuy·ªÉn
    else if (message == "UP" || message == "DOWN" || message == "LEFT" || message == "RIGHT") {
      Serial.print("Di chuy·ªÉn: ");
      Serial.println(message);
      // Th√™m ·ªü ƒë√¢y m√£ ƒëi·ªÅu khi·ªÉn ƒë·ªông c∆° ho·∫∑c thi·∫øt b·ªã theo h∆∞·ªõng
    }
    // X·ª≠ l√Ω l·ªánh d·ª´ng (STOP) t·ª´ n√∫t ch√≠nh gi·ªØa
    else if (message == "STOP") {
      Serial.println("Stop di chuy·ªÉn");
      // Th√™m ·ªü ƒë√¢y m√£ d·ª´ng chuy·ªÉn ƒë·ªông
    }
    // X·ª≠ l√Ω n√∫t tƒÉng t·ªëc
    else if (message == "BOOST") {
      speed += 50;
      if (speed > 255) speed = 255;
      Serial.print("TƒÉng t·ªëc l√™n: ");
      Serial.println(speed);
    }
    // X·ª≠ l√Ω n√∫t b·∫≠t/t·∫Øt LED
    else if (message == "TOGGLE_LED") {
      ledState = !ledState;
      ledcWrite(PWM_CHANNEL, ledState ? brightness : 0);
      Serial.println(ledState ? "LED B·∫¨T" : "LED T·∫ÆT");
    }
    // (T√πy ch·ªçn) G·ª≠i l·∫°i d·ªØ li·ªáu v·ªÅ giao di·ªán n·∫øu c·∫ßn
    // webSocket.broadcastTXT(String(speed));
  }
}

void setup() {
  Serial.begin(115200);
  WiFi.softAP(ssid, password);
  
  Serial.println("WiFi Access Point started!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.softAPIP());
  
  server.on("/", handleRoot);
  server.begin();
  
  webSocket.begin();
  webSocket.onEvent(webSocketEvent);
  
  // C·∫•u h√¨nh PWM cho LED (n·∫øu s·ª≠ d·ª•ng LED)
  ledcSetup(PWM_CHANNEL, PWM_FREQ, PWM_RESOLUTION);
  ledcAttachPin(LED_PIN, PWM_CHANNEL);
  ledcWrite(PWM_CHANNEL, 0); // M·∫∑c ƒë·ªãnh t·∫Øt LED
  
  Serial.println("ESP32 ƒë√£ s·∫µn s√†ng!");
}

void loop() {
  server.handleClient();
  webSocket.loop();
}
